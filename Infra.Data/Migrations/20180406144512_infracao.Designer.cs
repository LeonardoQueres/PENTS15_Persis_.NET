// <auto-generated />
using Domain.Enum;
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Infra.Data.Migrations
{
    [DbContext(typeof(AdminContext))]
    [Migration("20180406144512_infracao")]
    partial class infracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entidade.Endereco", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Cep")
                        .HasMaxLength(9);

                    b.Property<string>("Complemento")
                        .HasMaxLength(50);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("MetadataId")
                        .HasMaxLength(36);

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("Numero");

                    b.Property<int?>("Uf");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Domain.Entidade.Fornecedor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14);

                    b.Property<string>("InscricaoMunicipal")
                        .HasMaxLength(8);

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(200);

                    b.Property<decimal>("ReceitaBruta");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("Domain.Entidade.Infracao", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<bool>("Agravante");

                    b.Property<bool>("Atenuante");

                    b.Property<int>("Gravidade");

                    b.Property<decimal>("Multa");

                    b.Property<string>("ProcessoId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ProcessoId");

                    b.ToTable("Infracao");
                });

            modelBuilder.Entity("Domain.Entidade.Processo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("FiscalResponsavel")
                        .HasMaxLength(100);

                    b.Property<string>("FornecedorId")
                        .IsRequired();

                    b.Property<string>("Numero")
                        .HasMaxLength(30);

                    b.Property<DateTime>("Relato");

                    b.Property<string>("RelatoFiscalizacao")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("Id");

                    b.ToTable("Processo");
                });

            modelBuilder.Entity("Domain.Entidade.Produto", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Estoque")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FornecedorId")
                        .IsRequired();

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Domain.Entidade.Infracao", b =>
                {
                    b.HasOne("Domain.Entidade.Processo", "Processo")
                        .WithMany("Infracao")
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Entidade.Processo", b =>
                {
                    b.HasOne("Domain.Entidade.Fornecedor", "Fornecedor")
                        .WithMany("Processo")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Entidade.Produto", b =>
                {
                    b.HasOne("Domain.Entidade.Fornecedor", "Fornecedor")
                        .WithMany("Produto")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
